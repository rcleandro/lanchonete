name: pipeline
on:
  push:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - run: mvn test  
    
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"    
    
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
        
  code-analisys:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Package
        run: mvn package

  build:
    name: Build Archive
    runs-on: ubuntu-latest
    needs: unit-test
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml      
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: target/
    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: ./target/demo-0.0.2.7-SNAPSHOT.jar 

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions: 
      contents: read
      packages: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Publish package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
        run: mvn --batch-mode deploy
          
  deploy-STG:
    runs-on: ubuntu-latest
    environment:
      name: stg
    needs: publish
    
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy STG"
          
    
  deploy-Pre:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: publish

    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy PRE"
          
  deploy-Prod:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: publish

    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy PROD"       
